/**
 * AYLIEN News API
 * The AYLIEN News API is the most powerful way of sourcing, searching and syndicating analyzed and enriched news content. It is accessed by sending HTTP requests to our server, which returns information to your client. 
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@aylien.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AggregatedSentiment from './model/AggregatedSentiment';
import Author from './model/Author';
import Autocomplete from './model/Autocomplete';
import Autocompletes from './model/Autocompletes';
import Category from './model/Category';
import CategoryLinks from './model/CategoryLinks';
import CategoryTaxonomy from './model/CategoryTaxonomy';
import Cluster from './model/Cluster';
import Clusters from './model/Clusters';
import DeprecatedEntities from './model/DeprecatedEntities';
import DeprecatedEntity from './model/DeprecatedEntity';
import DeprecatedEntitySurfaceForm from './model/DeprecatedEntitySurfaceForm';
import DeprecatedRelatedStories from './model/DeprecatedRelatedStories';
import DeprecatedStories from './model/DeprecatedStories';
import DeprecatedStory from './model/DeprecatedStory';
import Entity from './model/Entity';
import EntityInText from './model/EntityInText';
import EntityLinks from './model/EntityLinks';
import EntityMention from './model/EntityMention';
import EntityMentionIndex from './model/EntityMentionIndex';
import EntitySentiment from './model/EntitySentiment';
import EntitySurfaceForm from './model/EntitySurfaceForm';
import Error from './model/Error';
import ErrorLinks from './model/ErrorLinks';
import Errors from './model/Errors';
import HistogramInterval from './model/HistogramInterval';
import Histograms from './model/Histograms';
import Location from './model/Location';
import Media from './model/Media';
import MediaFormat from './model/MediaFormat';
import MediaType from './model/MediaType';
import Rank from './model/Rank';
import Rankings from './model/Rankings';
import RelatedStories from './model/RelatedStories';
import RepresentativeStory from './model/RepresentativeStory';
import Scope from './model/Scope';
import ScopeLevel from './model/ScopeLevel';
import Sentiment from './model/Sentiment';
import SentimentPolarity from './model/SentimentPolarity';
import Sentiments from './model/Sentiments';
import ShareCount from './model/ShareCount';
import ShareCounts from './model/ShareCounts';
import Source from './model/Source';
import Stories from './model/Stories';
import Story from './model/Story';
import StoryCluster from './model/StoryCluster';
import StoryLinks from './model/StoryLinks';
import StoryTranslation from './model/StoryTranslation';
import StoryTranslations from './model/StoryTranslations';
import Summary from './model/Summary';
import TimeSeries from './model/TimeSeries';
import TimeSeriesList from './model/TimeSeriesList';
import Trend from './model/Trend';
import Trends from './model/Trends';
import Warning from './model/Warning';
import DefaultApi from './api/DefaultApi';


/**
* The_AYLIEN_News_API_is_the_most_powerful_way_of_sourcing_searching_and_syndicating_analyzed_and_enriched_news_content__It_is_accessed_by_sending_HTTP_requests_to_our_server_which_returns_information_to_your_client_.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AylienNewsApi = require('index'); // See note below*.
* var xxxSvc = new AylienNewsApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AylienNewsApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AylienNewsApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AylienNewsApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 4.5.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AggregatedSentiment model constructor.
     * @property {module:model/AggregatedSentiment}
     */
    AggregatedSentiment,

    /**
     * The Author model constructor.
     * @property {module:model/Author}
     */
    Author,

    /**
     * The Autocomplete model constructor.
     * @property {module:model/Autocomplete}
     */
    Autocomplete,

    /**
     * The Autocompletes model constructor.
     * @property {module:model/Autocompletes}
     */
    Autocompletes,

    /**
     * The Category model constructor.
     * @property {module:model/Category}
     */
    Category,

    /**
     * The CategoryLinks model constructor.
     * @property {module:model/CategoryLinks}
     */
    CategoryLinks,

    /**
     * The CategoryTaxonomy model constructor.
     * @property {module:model/CategoryTaxonomy}
     */
    CategoryTaxonomy,

    /**
     * The Cluster model constructor.
     * @property {module:model/Cluster}
     */
    Cluster,

    /**
     * The Clusters model constructor.
     * @property {module:model/Clusters}
     */
    Clusters,

    /**
     * The DeprecatedEntities model constructor.
     * @property {module:model/DeprecatedEntities}
     */
    DeprecatedEntities,

    /**
     * The DeprecatedEntity model constructor.
     * @property {module:model/DeprecatedEntity}
     */
    DeprecatedEntity,

    /**
     * The DeprecatedEntitySurfaceForm model constructor.
     * @property {module:model/DeprecatedEntitySurfaceForm}
     */
    DeprecatedEntitySurfaceForm,

    /**
     * The DeprecatedRelatedStories model constructor.
     * @property {module:model/DeprecatedRelatedStories}
     */
    DeprecatedRelatedStories,

    /**
     * The DeprecatedStories model constructor.
     * @property {module:model/DeprecatedStories}
     */
    DeprecatedStories,

    /**
     * The DeprecatedStory model constructor.
     * @property {module:model/DeprecatedStory}
     */
    DeprecatedStory,

    /**
     * The Entity model constructor.
     * @property {module:model/Entity}
     */
    Entity,

    /**
     * The EntityInText model constructor.
     * @property {module:model/EntityInText}
     */
    EntityInText,

    /**
     * The EntityLinks model constructor.
     * @property {module:model/EntityLinks}
     */
    EntityLinks,

    /**
     * The EntityMention model constructor.
     * @property {module:model/EntityMention}
     */
    EntityMention,

    /**
     * The EntityMentionIndex model constructor.
     * @property {module:model/EntityMentionIndex}
     */
    EntityMentionIndex,

    /**
     * The EntitySentiment model constructor.
     * @property {module:model/EntitySentiment}
     */
    EntitySentiment,

    /**
     * The EntitySurfaceForm model constructor.
     * @property {module:model/EntitySurfaceForm}
     */
    EntitySurfaceForm,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The ErrorLinks model constructor.
     * @property {module:model/ErrorLinks}
     */
    ErrorLinks,

    /**
     * The Errors model constructor.
     * @property {module:model/Errors}
     */
    Errors,

    /**
     * The HistogramInterval model constructor.
     * @property {module:model/HistogramInterval}
     */
    HistogramInterval,

    /**
     * The Histograms model constructor.
     * @property {module:model/Histograms}
     */
    Histograms,

    /**
     * The Location model constructor.
     * @property {module:model/Location}
     */
    Location,

    /**
     * The Media model constructor.
     * @property {module:model/Media}
     */
    Media,

    /**
     * The MediaFormat model constructor.
     * @property {module:model/MediaFormat}
     */
    MediaFormat,

    /**
     * The MediaType model constructor.
     * @property {module:model/MediaType}
     */
    MediaType,

    /**
     * The Rank model constructor.
     * @property {module:model/Rank}
     */
    Rank,

    /**
     * The Rankings model constructor.
     * @property {module:model/Rankings}
     */
    Rankings,

    /**
     * The RelatedStories model constructor.
     * @property {module:model/RelatedStories}
     */
    RelatedStories,

    /**
     * The RepresentativeStory model constructor.
     * @property {module:model/RepresentativeStory}
     */
    RepresentativeStory,

    /**
     * The Scope model constructor.
     * @property {module:model/Scope}
     */
    Scope,

    /**
     * The ScopeLevel model constructor.
     * @property {module:model/ScopeLevel}
     */
    ScopeLevel,

    /**
     * The Sentiment model constructor.
     * @property {module:model/Sentiment}
     */
    Sentiment,

    /**
     * The SentimentPolarity model constructor.
     * @property {module:model/SentimentPolarity}
     */
    SentimentPolarity,

    /**
     * The Sentiments model constructor.
     * @property {module:model/Sentiments}
     */
    Sentiments,

    /**
     * The ShareCount model constructor.
     * @property {module:model/ShareCount}
     */
    ShareCount,

    /**
     * The ShareCounts model constructor.
     * @property {module:model/ShareCounts}
     */
    ShareCounts,

    /**
     * The Source model constructor.
     * @property {module:model/Source}
     */
    Source,

    /**
     * The Stories model constructor.
     * @property {module:model/Stories}
     */
    Stories,

    /**
     * The Story model constructor.
     * @property {module:model/Story}
     */
    Story,

    /**
     * The StoryCluster model constructor.
     * @property {module:model/StoryCluster}
     */
    StoryCluster,

    /**
     * The StoryLinks model constructor.
     * @property {module:model/StoryLinks}
     */
    StoryLinks,

    /**
     * The StoryTranslation model constructor.
     * @property {module:model/StoryTranslation}
     */
    StoryTranslation,

    /**
     * The StoryTranslations model constructor.
     * @property {module:model/StoryTranslations}
     */
    StoryTranslations,

    /**
     * The Summary model constructor.
     * @property {module:model/Summary}
     */
    Summary,

    /**
     * The TimeSeries model constructor.
     * @property {module:model/TimeSeries}
     */
    TimeSeries,

    /**
     * The TimeSeriesList model constructor.
     * @property {module:model/TimeSeriesList}
     */
    TimeSeriesList,

    /**
     * The Trend model constructor.
     * @property {module:model/Trend}
     */
    Trend,

    /**
     * The Trends model constructor.
     * @property {module:model/Trends}
     */
    Trends,

    /**
     * The Warning model constructor.
     * @property {module:model/Warning}
     */
    Warning,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
